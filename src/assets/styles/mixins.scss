// 导入变量文件
@import './variables.scss';

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本省略
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 居中定位
@mixin center($type: 'both') {
  @if $type == 'both' {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $type == 'horizontal' {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  } @else if $type == 'vertical' {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
}

// 按钮样式
@mixin button($bg-color: $primary-color, $text-color: white) {
  display: inline-block;
  padding: $spacing-sm $spacing-md;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: $border-radius-base;
  cursor: pointer;
  font-size: $font-size-base;
  text-decoration: none;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: darken($bg-color, 10%);
  }
  
  &:active {
    transform: translateY(1px);
  }
}

// 卡片样式
@mixin card {
  background: white;
  border-radius: $border-radius-base;
  box-shadow: $box-shadow-base;
  padding: $spacing-md;
  margin-bottom: $spacing-md;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Flexbox 布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 渐变背景
@mixin gradient($start-color, $end-color, $direction: to bottom) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 阴影效果
@mixin shadow($level: base) {
  @if $level == base {
    box-shadow: $box-shadow-base;
  } @else if $level == light {
    box-shadow: $box-shadow-light;
  } @else if $level == none {
    box-shadow: none;
  }
} 